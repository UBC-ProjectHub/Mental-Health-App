[{"/Users/emilyandrews/Documents/emily-app/src/index.js":"1","/Users/emilyandrews/Documents/emily-app/src/App.js":"2","/Users/emilyandrews/Documents/emily-app/src/reportWebVitals.js":"3","/Users/emilyandrews/Documents/emily-app/src/LoginForm.js":"4","/Users/emilyandrews/Documents/emily-app/src/colors.js":"5"},{"size":500,"mtime":1609089651534,"results":"6","hashOfConfig":"7"},{"size":1773,"mtime":1609092690739,"results":"8","hashOfConfig":"7"},{"size":364,"mtime":1609089651574,"results":"9","hashOfConfig":"7"},{"size":2598,"mtime":1609091484427,"results":"10","hashOfConfig":"7"},{"size":74,"mtime":1609092282621,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16j8oi0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emilyandrews/Documents/emily-app/src/index.js",[],["24","25"],"/Users/emilyandrews/Documents/emily-app/src/App.js",[],"/Users/emilyandrews/Documents/emily-app/src/reportWebVitals.js",[],"/Users/emilyandrews/Documents/emily-app/src/LoginForm.js",["26"],"import styled from \"styled-components\";\nimport React from \"react\";\nimport * as EmailValidator from \"email-validator\";\nimport * as colors from \"./colors\";\n\nconst StyledInput = styled.input`\n  background: #ffffff;\n  border: 1px solid #e0e0e0;\n  box-sizing: border-box;\n  border-radius: 5px;\n  height: 40px;\n  width: 300px;\n  padding: 0px 10px 0px 10px;\n`;\n\nconst StyledForm = styled.form``;\n\nconst StyledLabel = styled.label`\n  font-size: 14px;\n  line-height: 17px;\n  display: flex;\n  align-items: center;\n  color: ${colors.TEXT_COLOR};\n  padding-bottom: 5px;\n`;\n\nconst InputWrapper = styled.div`\n  padding: 10px;\n`;\n\nconst StyledButton = styled.button`\n  height: 40px;\n  width: 300px;\n  border-radius: 5px;\n  box-sizing: border-box;\n  background-color: #9296ff;\n  outline: none;\n  border: none;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    filter: drop-shadow(0px 4px 10px rgba(0, 0, 0, 0.25));\n  }\n\n  &:disabled {\n    background: #d1d2e7;\n    &:hover {\n      filter: none;\n    }\n  }\n\n  &:active {\n    background: #8084ff;\n  }\n`;\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { email: \"\", password: \"\" };\n\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n\n    this.disableButton = this.disableButton.bind(this);\n  }\n\n  handleChangeEmail(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  handleChangePassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  disableButton() {\n    if (\n      EmailValidator.validate(this.state.email) &&\n      this.state.password != \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  render() {\n    return (\n      <StyledForm>\n        <InputWrapper>\n          <StyledLabel for=\"email\">Email</StyledLabel>\n          <StyledInput\n            placeholder=\"your@email.ca\"\n            id=\"email\"\n            value={this.state.email}\n            onChange={this.handleChangeEmail}\n          ></StyledInput>\n        </InputWrapper>\n        <InputWrapper>\n          <StyledLabel for=\"password\">Password</StyledLabel>\n          <StyledInput\n            type=\"password\"\n            id=\"password\"\n            value={this.state.password}\n            onChange={this.handleChangePassword}\n          ></StyledInput>\n        </InputWrapper>\n        <InputWrapper>\n          <StyledButton disabled={this.disableButton()}>Sign In</StyledButton>\n        </InputWrapper>\n      </StyledForm>\n    );\n  }\n}\n\nexport default LoginForm;\n","/Users/emilyandrews/Documents/emily-app/src/colors.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":83,"column":27,"nodeType":"33","messageId":"34","endLine":83,"endColumn":29},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]